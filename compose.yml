services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: prefect
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    restart: on-failure
  redis:
    image: redis
    volumes:
     - ./redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  prefect-server:
    build:
      context: ./prefect_server 
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/prefect
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_UI_API_URL: http://localhost:4200/api
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: 6379
      PREFECT_REDIS_MESSAGING_DB: 0
    healthcheck:
      test: curl --fail http://127.0.0.1:4200/api/health || 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: prefect server start
    ports:
      - 4200:4200
    restart: on-failure
  
  prefect-worker-initial-scrape:
    build:
      context: ./prefect_worker_initial_scrape
    depends_on:
      prefect-server:
        condition: service_healthy
    environment:
        PREFECT_API_URL: http://prefect-server:4200/api
    command:
      prefect worker start --pool initial-scrape
    restart: on-failure

  prefect-worker-detailed-scrape:
    build:
      context: ./prefect_worker_detailed_scrape
    depends_on:
      prefect-server:
        condition: service_healthy
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    command:
      prefect worker start --pool detailed-scrape
    restart: on-failure

  prefect-worker-investment-scrape:
    build:
      context: ./refect_worker_investment_scrape
    depends_on:
      prefect-server:
        condition: service_healthy
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    command:
      prefect worker start --pool investment-scrape
    restart: on-failure

  prefect-worker-process-upload-data:
    build:
      context: ./prefect_worker_process_scrape_results
    depends_on:
      prefect-server:
        condition: service_healthy
    restart: on-failure
    environment:
      OCI_USER_OCID:    ${OCI_USER_OCID}
      OCI_FINGERPRINT:  ${OCI_FINGERPRINT}
      OCI_TENANCY_OCID: ${OCI_TENANCY_OCID}
      OCI_REGION:       ${OCI_REGION}
      OCI_BUCKET_NAME:  ${OCI_BUCKET_NAME}
      OCI_NAMESPACE:    ${OCI_NAMESPACE}
      PREFECT_API_URL: http://prefect-server:4200/api
    volumes:
      - ./oci_api_key.pem:/app/oci_api_key.pem
    command:
      prefect worker start --pool process-scraped-data
volumes:
  postgres_data:
  redis_data: